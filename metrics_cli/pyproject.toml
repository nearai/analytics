[tool.poetry]
name = "metrics_cli"
version = "0.0.1"
description = "NEAR AI analytics metrics CLI"
authors = ["Support <support@near.ai>"]
readme = "README.md"
packages = [
    {include = "metrics_cli"}
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
# CLI dependencies
click = "^8.1.7"
rich = "^13.7.0"
# Package dependencies
metrics_core = {path = "../metrics_core", develop = true}
evaluation = {path = "../evaluation", develop = true}

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
ruff = "^0.5.2"

[tool.poetry.scripts]
metrics-cli = "metrics_cli.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
]
ignore = [
    "B008", # do not perform calls in argument defaults
    "C901", # too complex
    "C408", # dict() constructor
    "C417", # enforce list comprehension
    "W191", # indentation contains tabs
    "D401", # imperative mood
    "D100", # Missing docstring module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
exclude = [
    "venv",
    ".venv",
    ".vscode",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
]
explicit_package_bases = true