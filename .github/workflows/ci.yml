name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      run: |
        cd metrics_core && pip install -e . && cd ..
        cd evaluation && pip install -e . && cd ..
        cd metrics_cli && pip install -e . && cd ..
        cd metrics_service && pip install -e . && cd ..
        
    - name: Install Codespell
      run: pip install codespell
      
    - name: Run Codespell
      run: codespell --config .codespellrc
      
    - name: Lint Check
      run: |
        ./scripts/lint_check.sh
        
    - name: Format Check
      run: |
        ./scripts/format_check.sh
        
    - name: Type Check
      run: |
        ./scripts/type_check.sh

  test-historic-performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: |
        cd dashboard
        npm ci
    
    - name: Build dashboard
      run: |
        cd dashboard
        npm run build
    
    - name: Type Check dashboard
      run: |
        cd dashboard
        npx tsc --noEmit
